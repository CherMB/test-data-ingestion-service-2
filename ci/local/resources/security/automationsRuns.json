{
  "widget": {
    "id": "s3",
    "title": "Successful automation runs",
    "description": "",
    "enable_components_compare": true,
    "components_compare_id": "security-workflow-runs-compare",
    "content": [
      {
        "header": [
          {
            "title": "Total runs",
            "description": "Total runs",
            "post_process_function_name": "automation runs with scanner",
            "spec_key": "totalRunsSpec",
            "drill_down": {
              "report_id": "security-workflowRuns",
              "report_title": "Workflow runs"
            }
          }
        ],
        "section": [
          {
            "type": 6,
            "show_legends": false,
            "data_type": 1,
            "color_scheme": [
              {
                "color0": "#8BA9B8",
                "color1": "#5D7689"
              },
              {
                "color0": "#FFDAA5",
                "color1": "#FF8509"
              }
            ],
            "light_color_scheme": [
              {
                "color0": "#B2CDDF",
                "color1": "#7297AE"
              },
              {
                "color0": "#FFDAA5",
                "color1": "#FF9529"
              }
            ],
            "drill_down": {
              "report_id": "security-workflowRuns",
              "report_type": "scanners",
              "report_title": "Workflow runs"
            },
            "post_process_function_name": "automation runs with scanner",
            "spec_key": "runsStatusChartSpec"
          }
        ]
      }
    ]
  },
  "queries": {
    "totalAutomationRuns": {
      "alias": "automation_run_status,scan_results",
      "query": {
        "_source": false,
        "size": 0,
        "query": {
          "bool": {
            "should": [
              {
                "bool": {
                  "must": [
                    {
                      "term": {
                        "_index": "automation_run_status"
                      }
                    },
                    {
                      "range": {
                        "status_timestamp": {
                          "gte": "{{.startDate}}",
                          "lte": "{{.endDate}}",
                          "format": "yyyy-MM-dd HH:mm:ss",
                          "time_zone": "{{.timeZone}}"
                        }
                      }
                    },
                    {
                      "term": {
                        "org_id": "{{.orgId}}"
                      }
                    },
                    {
                      "term": {
                        "job_id": ""
                      }
                    },
                    {
                      "term": {
                        "step_id": ""
                      }
                    },
                    {
                      "bool": {
                        "should": [
                          {
                            "term": {
                              "status": "SUCCEEDED"
                            }
                          },
                          {
                            "term": {
                              "status": "FAILED"
                            }
                          },
                          {
                            "term": {
                              "status": "TIMED_OUT"
                            }
                          },
                          {
                            "term": {
                              "status": "ABORTED"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "bool": {
                  "must": [
                    {
                      "term": {
                        "_index": "scan_results"
                      }
                    },
                    {
                      "term": {
                        "org_id": "{{.orgId}}"
                      }
                    },
                    {
                      "range": {
                        "timestamp": {
                          "gte": "{{.startDate}}",
                          "lte": "{{.endDate}}",
                          "format": "yyyy-MM-dd HH:mm:ss||strict_date_optional_time ||epoch_millis",
                          "time_zone": "{{.timeZone}}"
                        }
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        "aggs": {
          "run_status": {
            "scripted_metric": {
              "init_script": "state.data_map=[:];state.scanRunIds=new HashSet();",
              "map_script": "def map = state.data_map;def scanRunIdsSet=state.scanRunIds;if(doc.containsKey('scanner_type')){scanRunIdsSet.add(doc.run_id.value);}else{def key = doc.org_id+'_'+doc.automation_id.value + '_' + doc.run_id.value + '_' + doc.status.value;def v = ['automation_id': doc.automation_id.value, 'run_id': doc.run_id.value];map.put(key, v);}",
              "combine_script": "def stateMap =new HashMap();stateMap.put('scanRunIds',state.scanRunIds);stateMap.put('data_map',state.data_map);return stateMap;",
              "reduce_script": "def tmpMap = [: ];def totalCount = 0;def withScans = 0;def scanRunIds = new HashSet();def autoRunIds = new HashSet();for (a in states) {    if (a != null) {        for (i in a.keySet()) {            if (i == 'scanRunIds') {                scanRunIds.addAll(a.get(i));            } else if (i == 'data_map') {                def dataMap = a.get(i);                for (k in dataMap.keySet()) {                    def runData = dataMap.get(k);                    tmpMap.put(k, runData);                }            }        }    }}for (key in tmpMap.keySet()) {    def mapRecord = tmpMap.get(key);    autoRunIds.add(mapRecord.run_id);}for (String k: autoRunIds) {    if (scanRunIds.contains(k)) {        withScans++;    }}def drillDown = new HashMap();totalCount = autoRunIds.size();drillDown.put('reportId', 'security-workflowRuns');drillDown.put('reportType', 'scanners');drillDown.put('reportTitle', 'Workflow runs');def totalRecord = ['key': 'Total', 'value': totalCount];def withScanners = ['title': 'With scanners', 'value': withScans, 'drillDown': drillDown];def withoutScanners = ['title': 'Without scanners', 'value': totalCount - withScans, 'drillDown': drillDown];def withPerValue = 0.0;withPerValue = (withScans * 100 / totalCount);def withoutPerValue = 0.0;withoutPerValue = ((totalCount - withScans) * 100 / totalCount);def withScannersPercent = ['name': 'With scanners', 'value': withPerValue];def withoutScannersPercent = ['name': 'Without scanners', 'value': withoutPerValue];def resultList = new ArrayList();def infoList = new ArrayList();resultList.add(withScanners);resultList.add(withoutScanners);infoList.add(withScannersPercent);infoList.add(withoutScannersPercent);def resultMap = new HashMap();def dataMap = new HashMap();resultMap.put('Total', totalRecord);dataMap.put('info', resultList);dataMap.put('data', infoList);resultMap.put('chartData', dataMap);return resultMap;"
            }
          }
        }
      }
    }
  }
}