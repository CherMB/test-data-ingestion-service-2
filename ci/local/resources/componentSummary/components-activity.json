{
    "widget": {
        "id": "cs1",
        "title": "Activity",
        "description": "",
        "content": [
            {
                "header": [
                    {
                        "title": "Total workflows",
                        "description": "",
                        "past_duration_query_key": "",
                        "type": "",
                        "function_name": "Automation Widget Header",
                        "drill_down": {
                            "report_id": "component-summary-workflows",
                            "report_type": "",
                            "report_title": "Workflows",
                            "report_info": null
                        }
                    }
                ],
                "section": [
                    {
                        "type": 13,
                        "show_legends": false,
                        "color_scheme": null,
                        "column_type": null,
                        "function_name": "Summary Automation Widget Section",
                        "title": "",
                        "info": null,
                        "data_type": 0,
                        "category_type": "",
                        "orientation": 0,
                        "drill_down": null
                    }
                ],
                "footer": []
            },
            {
                "header": [
                    {
                        "title": "Total PRs & Direct commits",
                        "description": "",
                        "post_process_function_name": "component commits activity",
                        "spec_key": "header",
                        "drill_down": {
                            "report_id": "component-summary-commits",
                            "report_type": "",
                            "report_title": "Commits",
                            "report_info": null
                        }
                    }
                ],
                "section": [
                    {
                        "type": 13,
                        "show_legends": true,
                        "color_scheme": null,
                        "post_process_function_name": "component commits activity",
                        "spec_key": "section",
                        "title": "",
                        "info": null,
                        "data_type": 0,
                        "category_type": "",
                        "orientation": 0,
                        "drill_down": null
                    }
                ],
                "footer": []
            },
            {
                "header": [
                    {
                        "title": "Total workflow runs",
                        "description": "",
                        "post_process_function_name": "component runs activity",
                        "spec_key": "header",
                        "drill_down": {
                            "report_id": "component-summary-workflowRuns",
                            "report_type": "",
                            "report_title": "Workflow runs",
                            "report_info": null
                        }
                    }
                ],
                "section": [
                    {
                        "type": 13,
                        "show_legends": false,
                        "color_scheme": null,
                        "post_process_function_name": "component runs activity",
                        "spec_key": "section",
                        "title": "",
                        "info": null,
                        "data_type": 0,
                        "category_type": "",
                        "orientation": 0,
                        "drill_down": null
                    }
                ],
                "footer": []
            }
        ],
        "pagination": false
    },
    "functions": [
        "Automation Widget Header",
        "Summary Automation Widget Section"
    ],
    "queries": {
        "commitsActivity": {
            "alias": "commit_data",
            "query": {
                "size": 0,
                "query": {
                    "bool": {
                        "filter": [
                            {
                                "range": {
                                    "commit_timestamp": {
                                        "gte": "{{.startDate}}",
                                        "lte": "{{.endDate}}",
                                        "format": "yyyy-MM-dd HH:mm:ss",
                                        "time_zone": "{{.timeZone}}"
                                    }
                                }
                            },
                            {
                                "term": {
                                    "org_id": "{{.orgId}}"
                                }
                            },
                            {
                                "bool": {
                                    "must_not": {
                                        "term": {
                                            "author": "github-actions[bot]"
                                        }
                                    }
                                }
                            },
                            {
                                "bool": {
                                    "must_not": {
                                        "prefix": {
                                            "branch": {
                                                "value": "dependabot"
                                            }
                                        }
                                    }
                                }
                            }
                        ]
                    }
                },
                "aggs": {
                    "commits": {
                        "scripted_metric": {
                            "init_script": "state.statusMap = [:];",
                            "map_script": "def map = state.statusMap;def key = doc.repository_name.value+'_'+doc.commit_id.value+'_'+doc.branch.value;def v = ['branch': doc.branch.value, 'component_id': doc.component_id.value, 'commit_id': doc.commit_id.value, 'org_id': doc.org_id.value, 'commit_timestamp': doc.commit_timestamp.value, 'component_name': doc.component_name.value, 'repository_name': doc.repository_name.value, 'author': doc.author.value];map.put(key, v);",
                            "combine_script": "return state.statusMap;",
                            "reduce_script": "def tmpMap=[:],resultMap=new HashMap(),commits=new ArrayList();for(response in states){if(response!=null){for(key in response.keySet()){tmpMap.put(key,response.get(key));}}}def authorSet=new HashSet();for(key in tmpMap.keySet()){authorSet.add(tmpMap.get(key).author);}resultMap.put('commits_count',tmpMap.size());def average=0;if(authorSet.size()>0){average=tmpMap.size()/authorSet.size();}def devRecord=['title':'Active Developers','value':authorSet.size()];def commitAvgRecord=['title':'Commits / active dev','value':average];resultMap.put('avg',commitAvgRecord);resultMap.put('dev',devRecord);return resultMap;"
                        }
                    }
                }
            }
        },
        "runsActivity": {
            "alias": "automation_run_status",
            "query": {
                "size": 0,
                "query": {
                    "bool": {
                        "filter": [
                            {
                                "range": {
                                    "status_timestamp": {
                                        "gte": "{{.startDate}}",
                                        "lte": "{{.endDate}}",
                                        "format": "yyyy-MM-dd HH:mm:ss",
                                        "time_zone": "{{.timeZone}}"
                                    }
                                }
                            },
                            {
                                "term": {
                                    "org_id": "{{.orgId}}"
                                }
                            },
                            {
                                "term": {
                                    "job_id": ""
                                }
                            },
                            {
                                "term": {
                                    "step_id": ""
                                }
                            },
                            {
                                "bool": {
                                    "should": [
                                        {
                                            "term": {
                                                "status": "SUCCEEDED"
                                            }
                                        },
                                        {
                                            "term": {
                                                "status": "FAILED"
                                            }
                                        },
                                        {
                                            "term": {
                                                "status": "TIMED_OUT"
                                            }
                                        },
                                        {
                                            "term": {
                                                "status": "ABORTED"
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    }
                },
                "aggs": {
                    "automation_run": {
                        "scripted_metric": {
                            "init_script": "state.data_map=[:];",
                            "map_script": "def map = state.data_map;def key = doc.run_id.value + '_' + doc.status.value;def v = ['run_id': doc.run_id.value, 'status': doc.status.value];map.put(key, v);",
                            "combine_script": "return state.data_map;",
                            "reduce_script": "def tmpMap = [: ], out = [: ], resultMap = new HashMap(), countMap = new HashMap(), totalCount = 0.0;for (response in states) {if (response != null) {for (key in response.keySet()) {def record = response.get(key);if (record.status == 'SUCCEEDED') {record.status = 'Success';} else if (record.status == 'FAILED' || record.status == 'TIMED_OUT' || record.status == 'ABORTED') {record.status = 'Failure';}tmpMap.put(key, record);}}}for (key in tmpMap.keySet()) {def mapRecord = tmpMap.get(key);if (countMap.containsKey(mapRecord.status)) {def count = countMap.get(mapRecord.status);countMap.put(mapRecord.status, count + 1);totalCount++;} else {countMap.put(mapRecord.status, 1);totalCount++;}}def statusArray = ['Success', 'Failure'], dataArray = new ArrayList();for (key in statusArray) {def count = 0, dataMap = new HashMap();if (countMap.containsKey(key)) {count = countMap.get(key);}dataMap.put('title', key);dataMap.put('value', count);dataArray.add(dataMap);}resultMap.put('totalCount', totalCount);resultMap.put('data', dataArray);return resultMap;"
                        }
                    }
                }
            }
        }
    }
}