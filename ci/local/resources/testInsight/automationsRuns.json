{
  "widget": {
    "id": "ti3",
    "title": "Workflow runs",
    "description": "",
    "enable_components_compare": true,
    "components_compare_id": "test-insights-workflow-runs-compare",
    "content": [
      {
        "header": [
          {
            "title": "Total runs",
            "description": "Total runs",
            "post_process_function_name": "automation runs for test suites",
            "spec_key": "totalTestRunsSpec",
            "drill_down": {
              "report_id": "test-insights-workflowRuns",
              "report_title": "Workflow runs"
            }
          }
        ],
        "section": [
          {
            "type": 6,
            "show_legends": false,
            "data_type": 1,
            "color_scheme": [
              {
                "color0": "#ADFFD8",
                "color1": "#17B268"
              },
              {
                "color0": "#FFE6C1",
                "color1": "#F2A414"
              }
            ],
            "light_color_scheme": [
              {
                "color0": "#79CAA8",
                "color1": "#0C9E61"
              },
              {
                "color0": "#FFE6C1",
                "color1": "#F2A414"
              }
            ],
            "drill_down": {
              "report_id": "test-insights-workflowRuns",
              "report_type": "testSuiteType",
              "report_title": "Workflow runs"
            },
            "post_process_function_name": "automation runs for test suites",
            "spec_key": "testRunsChartSpec"
          }
        ]
      }
    ]
  },
  "queries": {
    "testSuites": {
      "alias": "cb_test_suites",
      "query": {
        "size": 0,
        "query": {
          "bool": {
            "filter": [
              {
                "range": {
                  "run_start_time": {
                    "gte": "{{.startDate}}",
                    "lte": "{{.endDate}}",
                    "format": "yyyy-MM-dd HH:mm:ss",
                    "time_zone": "{{.timeZone}}"
                  }
                }
              },
              {
                "term": {
                  "org_id": "{{.orgId}}"
                }
              }
            ]
          }
        },
        "aggs": {
          "component_activity": {
            "scripted_metric": {
              "init_script": "state.data_map = [:];",
              "map_script": "def map=state.data_map;def key=doc.component_id.value+'_'+doc.automation_id.value+'_'+doc.run_id.value+'_'+doc.test_suite_name.value;def v=['org_id':doc.org_id.value,'component_id':doc.component_id.value,'automation_id':doc.automation_id.value,'branch_id':doc.branch_id.value,'run_id':doc.run_id.value,'test_suite_name':doc.test_suite_name.value];map.put(key,v);",
              "combine_script": "return state.data_map;",
              "reduce_script": "def resultMap=new HashMap();int count=0;def set=new HashSet();for(a in states){if(a!=null){for(i in a.keySet()){def record=a.get(i);def key=record.component_id+'_'+record.automation_id+'_'+record.run_id;if(!resultMap.containsKey(key)){set.add(record.get('run_id'));record.put('runs_ids',set);}}}}resultMap.put('runs',set.size());return resultMap;"
            }
          }
        }
      }
    },
    "automationRuns": {
      "alias": "automation_run_status",
      "query": {
        "size": 0,
        "query": {
          "bool": {
            "filter": [
              {
                "range": {
                  "timestamp": {
                    "gte": "{{.startDate}}",
                    "lte": "{{.endDate}}",
                    "format": "yyyy-MM-dd HH:mm:ss",
                    "time_zone": "{{.timeZone}}"
                  }
                }
              },
              {
                "term": {
                  "org_id": "{{.orgId}}"
                }
              },
              {
                "term": {
                  "job_id": ""
                }
              },
              {
                "term": {
                  "step_id": ""
                }
              },
              {
                "bool": {
                  "should": [
                    {
                      "term": {
                        "status": "SUCCEEDED"
                      }
                    },
                    {
                      "term": {
                        "status": "FAILED"
                      }
                    },
                    {
                      "term": {
                        "status": "TIMED_OUT"
                      }
                    },
                    {
                      "term": {
                        "status": "ABORTED"
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        "aggs": {
          "component_activity": {
            "scripted_metric": {
              "init_script": "state.data_map = [:];",
              "map_script": "def map=state.data_map;def key=doc.org_id+'_'+doc.automation_id.value+'_'+doc.run_id.value;def v=['org_id':doc.org_id.value,'component_id':doc.component_id.value,'automation_id':doc.automation_id.value,'run_id':doc.run_id.value,'status':doc.status.value];map.put(key,v);",
              "combine_script": "return state.data_map;",
              "reduce_script": "def resultMap=new HashMap();def set=new HashSet();for(a in states){if(a!=null){for(i in a.keySet()){def record=a.get(i);def key=record.org_id+'_'+record.automation_id+'_'+record.run_id;if(!resultMap.containsKey(key)){set.add(key);record.put('runs_ids',set);}}}}resultMap.put('runs',set.size());return resultMap;"
            }
          }
        }
      }
    }
  }
}