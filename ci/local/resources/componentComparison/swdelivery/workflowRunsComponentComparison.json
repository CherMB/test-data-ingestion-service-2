{
  "definition": {
    "id": "workflow-runs-compare",
    "title": "Workflow runs",
    "sub_title": "Comparison",
    "breadCrumbTitle": "{{.orgName}}",
    "post_process_function_name": "workflow runs component comparison",
    "column_details": {
      "column1": "Name",
      "column2": "Runs / Status"
    },
    "header_field": "totalValue",
    "compare_common_section_details": {
      "type": 2,
      "show_legends": false,
      "is_component_compare": true,
      "orientation": 0,
      "append_unit": " ",
      "tooltip_formatter": 1,
      "color_scheme": [
        {
          "color0": "#009C5B",
          "color1": "#62CA9D"
        },
        {
          "color0": "#D32227",
          "color1": "#FB6E72"
        }
      ],
      "light_color_scheme": [
        {
          "color0": "#0C9E61",
          "color1": "#79CAA8"
        },
        {
          "color0": "#E83D39",
          "color1": "#F39492"
        }
      ]
    }
  },
  "queries": {
    "runsStatusChart": {
      "alias": "automation_run_status",
      "query": {
        "_source": false,
        "size": 0,
        "query": {
          "bool": {
            "filter": [
              {
                "range": {
                  "status_timestamp": {
                    "gte": "{{.startDate}}",
                    "lte": "{{.endDate}}",
                    "format": "yyyy-MM-dd HH:mm:ss",
                    "time_zone": "{{.timeZone}}"
                  }
                }
              },
              {
                "term": {
                  "org_id": "{{.orgId}}"
                }
              },
              {
                "term": {
                  "job_id": ""
                }
              },
              {
                "term": {
                  "step_id": ""
                }
              },
              {
                "bool": {
                  "should": [
                    {
                      "term": {
                        "status": "SUCCEEDED"
                      }
                    },
                    {
                      "term": {
                        "status": "FAILED"
                      }
                    },
                    {
                      "term": {
                        "status": "TIMED_OUT"
                      }
                    },
                    {
                      "term": {
                        "status": "ABORTED"
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        "aggs": {
          "workflow_runs_component_comparison": {
            "terms": {
              "field": "component_id",
              "size": 10000
            },
            "aggs": {
              "automation_run": {
                "scripted_metric": {
                  "init_script": "state.data_map=[:];",
                  "map_script": "def map = state.data_map;def key = doc.org_id+'_'+doc.automation_id.value + '_' + doc.run_id.value + '_' + doc.status.value;def v = ['run_id': doc.run_id.value, 'status': doc.status.value];map.put(key, v);",
                  "combine_script": "return state.data_map;",
                  "reduce_script": "def tmpMap = [: ], out = [: ], resultMap = new HashMap(), countMap = new HashMap(), totalCount = 0.0;for (response in states) {if (response != null) {for (key in response.keySet()) {def record = response.get(key);if (record.status == 'SUCCEEDED') {record.status = 'Success';} else if (record.status == 'FAILED' || record.status == 'TIMED_OUT' || record.status == 'ABORTED') {record.status = 'Failure';}tmpMap.put(key, record);}}}for (key in tmpMap.keySet()) {def mapRecord = tmpMap.get(key);if (countMap.containsKey(mapRecord.status)) {def count = countMap.get(mapRecord.status);countMap.put(mapRecord.status, count + 1);totalCount++;} else {countMap.put(mapRecord.status, 1);totalCount++;}}def statusArray = ['Success', 'Failure'];for (key in statusArray) {def count = 0;if (countMap.containsKey(key)) {count = countMap.get(key);}resultMap.put(key, count);}return resultMap;"
                }
              }
            }
          }
        }
      }
    }
  }
}