{
    "definition": {
        "id": "builds-compare",
        "title": "Builds",
        "sub_title": "Comparison",
        "breadCrumbTitle": "{{.orgName}}",
        "post_process_function_name": "builds component comparison",
        "column_details": {
            "column1": "Name",
            "column2": "Count / Status"
        },
        "header_field": "totalValue",
        "compare_common_section_details": {
            "type": 2,
            "show_legends": false,
            "is_component_compare": true,
            "orientation": 0,
            "append_unit": " ",
            "tooltip_formatter": 1,
            "color_scheme": [
                {
                    "color0": "#09DE83",
                    "color1": "#06A964"
                },
                {
                    "color0": "#FEA3A5",
                    "color1": "#E02227"
                }
            ],
            "light_color_scheme": [
                {
                    "color0": "#79CAA8",
                    "color1": "#0C9E61"
                },
                {
                    "color0": "#E83D39",
                    "color1": "#F39492"
                }
            ]
        }
    },
    "queries": {
        "buildsChart": {
            "alias": "build_data",
            "query": {
                "_source": false,
                "size": 0,
                "query": {
                    "bool": {
                        "filter": [
                            {
                                "range": {
                                    "status_timestamp": {
                                        "gte": "{{.startDate}}",
                                        "lte": "{{.endDate}}",
                                        "format": "yyyy-MM-dd HH:mm:ss",
                                        "time_zone": "{{.timeZone}}"
                                    }
                                }
                            },
                            {
                                "term": {
                                    "org_id": "{{.orgId}}"
                                }
                            },
                            {
                                "term": {
                                    "step_kind": "build"
                                }
                            },
                            {
                                "term": {
                                  "data_type": 2
                              }
                            },
                            {
                                "bool": {
                                    "should": [
                                        {
                                            "term": {
                                                "status": "SUCCEEDED"
                                            }
                                        },
                                        {
                                            "term": {
                                                "status": "FAILED"
                                            }
                                        },
                                        {
                                            "term": {
                                                "status": "TIMED_OUT"
                                            }
                                        },
                                        {
                                            "term": {
                                                "status": "ABORTED"
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    }
                },
                "aggs": {
                    "builds_component_comparison": {
                        "terms": {
                            "field": "component_id",
                            "size": 10000
                        },
                        "aggs": {
                            "build_status": {
                                "scripted_metric": {
                                    "init_script": "state.data_map=[:];",
                                    "map_script": "def map = state.data_map;def key = doc.run_id.value + '_' + doc.status.value;def v = ['run_id': doc.run_id.value, 'status': doc.status.value];map.put(key, v);",
                                    "combine_script": "return state.data_map;",
                                    "reduce_script": "def tmpMap = [: ], out = [: ], resultMap = new HashMap(), countMap = new HashMap(), totalCount = 0.0;for (response in states) {if (response != null) {for (key in response.keySet()) {def record = response.get(key);if (tmpMap.containsKey(key)) {def mapRecord = tmpMap.get(key);tmpMap.put(key, record);} else {tmpMap.put(key, record);}}}}for (key in tmpMap.keySet()) {def mapRecord = tmpMap.get(key);def status = mapRecord.status;if (status == 'SUCCEEDED') {status = 'Success';} else if (status == 'FAILED' || status == 'TIMED_OUT' || status == 'ABORTED') {status = 'Failure';}if (countMap.containsKey(status)) {def count = countMap.get(status);countMap.put(status, count + 1);totalCount++;} else {countMap.put(status, 1);totalCount++;}}def dataArray = [], infoArray = [], statusArray = ['Success', 'Failure'];def drilldownMap = new HashMap();drilldownMap.put('reportId', 'builds');drilldownMap.put('reportType', 'status');drilldownMap.put('reportTitle', 'Builds');for (key in statusArray) {def count = 0, percent = 0;if (countMap.containsKey(key)) {count = countMap.get(key);percent = Math.round((count / totalCount) * 100);}def data = ['name': key, 'value': percent];dataArray.add(data);def info = ['title': key, 'value': count, 'drillDown': drilldownMap];infoArray.add(info);}resultMap.put('data', dataArray);resultMap.put('info', infoArray);return resultMap;"
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}