{
    "widget": {
        "id": "d2",
        "title": "Deployment lead time",
        "description": "This widget displays the deployment lead time, providing insights into the deployment lead time and streamline the process.",
        "enable_components_compare": true,
        "components_compare_id": "deployment-lead-time-compare",
        "content": [
            {
                "header": [
                    {
                        "title": "Average duration",
                        "description": "Average deployment duration",
                        "post_process_function_name": "deployment lead time",
                        "spec_key": "deploymentLeadTimeHeaderSpec",
                        "drill_down": {
                            "report_id": "doraMetrics-deploymentLeadTime",
                            "report_title": "Successful deployments",
                            "report_info": {
                                "deployment_env": "{{.targetEnv}}"
                            }
                        }
                    }
                ]
            }
        ]
    },
    "queries": {
        "deploymentLeadTimeHeader": {
            "alias": "deploy_data",
            "query": {
                "size": 0,
                "query": {
                    "bool": {
                        "filter": [
                            {
                                "range": {
                                    "status_timestamp": {
                                        "gte": "{{.startDate}}",
                                        "lte": "{{.endDate}}",
                                        "format": "yyyy-MM-dd HH:mm:ss",
                                        "time_zone": "{{.timeZone}}"
                                    }
                                }
                            },
                            {
                                "term": {
                                    "org_id": "{{.orgId}}"
                                }
                            },
                            {
                                "term": {
                                    "data_type": 2
                                }
                            },
                            {
                                "term": {
                                    "status": "SUCCEEDED"
                                }
                            },
                            {
                                "term": {
                                    "target_env": "{{.targetEnv}}"
                                }
                            }
                        ]
                    }
                },
                "aggs": {
                    "deploy_data": {
                        "scripted_metric": {
                            "combine_script": "return state.data_map;",
                            "init_script": "state.data_map=[:];",
                            "map_script": "def map = state.data_map;def key = doc.component_id.value + '_' + doc.run_id.value + '_' + doc.job_id.value + '_' + doc.step_id.value + '_' + doc.target_env.value + '_' + doc.status.value;def v = ['run_id':doc.run_id.value, 'job_id':doc.job_id.value, 'step_id':doc.step_id.value, 'target_env':doc.target_env.value, 'step_kind':doc.step_kind.value, 'start_time':doc.start_time.value, 'completed_time':doc.completed_time.value, 'status_timestamp':doc.status_timestamp.value, 'status':doc.status.value, 'component_id':doc.component_id.value, 'automation_id':doc.automation_id.value, 'duration':doc.duration.value, 'run_start_time':doc['run_start_time'].size() != 0? doc.run_start_time.value:0];map.put(key, v);",
                            "reduce_script": "def allDataMap = new HashMap(), resultMap = new HashMap(), jobStepDedupMap = new HashMap();for (response in states){if (response != null){for (key in response.keySet()){def record = response.get(key);allDataMap.put(key, record);}}}for (key in allDataMap.keySet()){def currRecord = allDataMap.get(key);if (currRecord.step_id == ''){jobStepDedupMap.put(key, currRecord);} else{def jobLevelRecordKey = currRecord.component_id + '_' + currRecord.run_id + '_' + currRecord.job_id + '_' + '' + '_' + currRecord.target_env + '_' + currRecord.status;if (!allDataMap.containsKey(jobLevelRecordKey)){jobStepDedupMap.put(key, currRecord);}}}def size = '' + jobStepDedupMap.size(), totalDuration = 0.0;def deployments = Double.parseDouble(size);for (key in jobStepDedupMap.keySet()){def record = jobStepDedupMap.get(key);if (record.run_start_time > 0){totalDuration += (record.status_timestamp.getMillis() - record.run_start_time);} else if (record.duration > 0){totalDuration += record.duration;}}resultMap.put('deployments', deployments);resultMap.put('totalDuration', totalDuration);resultMap.put('average', Math.round((totalDuration / deployments * 100) / 100.0));return resultMap;"
                        }
                    }
                }
            }
        }
    }
}