{
    "definition": {
        "id": "open-vulnerabilities-compare",
        "title": "Open Vulnerabilities Overview",
        "sub_title": "Comparison",
        "breadCrumbTitle": "{{.orgName}}",
        "post_process_function_name": "open vulnerabilities overview comparison",
        "column_details": {
            "column1": "Organization name",
            "column2": "Count/Status"
        },
        "header_field": "totalValue",
        "compare_common_section_details": {
            "type": 2,
            "show_legends": false,
            "is_component_compare": true,
            "orientation": 0,
            "append_unit": " ",
            "tooltip_formatter": 1,
            "color_scheme": [
                {
                    "color0": "#FA6D71",
                    "color1": "#D52429",
                    "color2": "#FFC9CA"
                },
                {
                    "color0": "#FF8205",
                    "color1": "#FCC26C",
                    "color2": "#FFF4D3"
                },
                {
                    "color0": "#FDA512",
                    "color1": "#FDFF89",
                    "color2": "#FFF7C2"
                },
                {
                    "color0": "#9FB6C1",
                    "color1": "#577688",
                    "color2": "#C6D4DB"
                }
            ],
            "light_color_scheme": [
                {
                    "color0": "#FFB4B2",
                    "color1": "#EF322E",
                    "color2": "#9C181B"
                },
                {
                    "color0": "#FF8205",
                    "color1": "#FFDBA6",
                    "color2": "#CC5C02"
                },
                {
                    "color0": "#FEC513",
                    "color1": "#FFED89",
                    "color2": "#A35B05"
                },
                {
                    "color0": "#759AB1",
                    "color1": "#B2CEE0",
                    "color2": "#394651"
                }
            ]
        }    
    },
    "queries":{
        "openVulAgeChart": {
            "alias": "scan_results",
            "query": {
                "size": 0,
                "query": {
                    "bool": {
                        "filter": [
                            {
                                "range": {
                                    "scan_time": {
                                      "gte": "{{.startDate}}",
                                      "lte": "{{.endDate}}",
                                      "format": "yyyy-MM-dd HH:mm:ss",
                                      "time_zone":"{{.timeZone}}"
                                    }
                                  }
                            },
                            {
                                "term": {
                                    "org_id": "{{.orgId}}"
                                }
                            },
                            {
                                "exists": {
                                  "field": "date_of_discovery"
                                }
                              },
                              {
                                "terms": {
                                  "severity": [
                                    "MEDIUM",
                                    "HIGH",
                                    "LOW",
                                    "VERY_HIGH"
                                  ]
                                }
                              }
                        ]
                    }
                },
                "aggs": {
                    "open_vulnerabilities_overview_component_comparison": {
                        "terms": {
                          "field": "component_id",
                          "size": 10000
                        },
                        "aggs": {
                            "openVulSeverityCount": {
                                "scripted_metric": {
                                    "init_script": "state.statusMap = [:];",
                                    "map_script": "def map=state.statusMap;def key=doc.org_id.value+'_'+doc.component_id.value+ '_' +doc.github_branch.value +'_'+doc.code.value+'_'+doc.scanner_name.value+'_'+doc['timestamp'].getValue().toEpochSecond()*1000;def v=['org_id': doc.org_id.value, 'component_id': doc.component_id.value,'branch': doc.github_branch.value,'scanner_name': doc.scanner_name.value,'timestamp':doc['timestamp'].getValue().toEpochSecond()*1000,'code':doc.code.value,'bug_status':doc.bug_status.value,'name':doc.name.value, 'component_name':doc.component_name.value, 'severity':doc.severity.value];map.put(key,v);",
                                    "combine_script": "return state.statusMap;",
                                    "reduce_script": "def statusMap = new HashMap();def severityMap = new HashMap();severityMap.put('VERY_HIGH',0);severityMap.put('HIGH',0);severityMap.put('MEDIUM',0);severityMap.put('LOW',0);for (a in states){if (a != null){for (i in a.keySet()){def record = a.get(i);def key = record.org_id + '_' + record.code;if (statusMap.containsKey(key)){def vulDetailsMap = statusMap.get(key);def vulKey = record.org_id + '_' + record.component_id + '_' + record.branch + '_' + record.code + '_' + record.scanner_name;if (vulDetailsMap.containsKey(vulKey)){def lastRecord = vulDetailsMap.get(vulKey);if (lastRecord.timestamp < record.timestamp){vulDetailsMap.put(vulKey, record);}} else{vulDetailsMap.put(vulKey, record);}} else{def vulDetailsMap = new HashMap();def vulKey = record.org_id + '_' + record.component_id + '_' + record.branch + '_' + record.code + '_' + record.scanner_name;vulDetailsMap.put(vulKey, record);statusMap.put(key, vulDetailsMap);}}}}if (statusMap.size() > 0){for (uniqueKey in statusMap.keySet()){def vulMapBranchLevel = statusMap.get(uniqueKey);for (vulKey in vulMapBranchLevel.keySet()){def vul = vulMapBranchLevel.get(vulKey);if (vul.bug_status == 'Open' || vul.bug_status == 'Reopened'){if (severityMap.containsKey(vul.severity)){def count = severityMap.get(vul.severity);severityMap.put(vul.severity, count + 1);break;} else{severityMap.put(vul.severity, 1);break;}}}}}return severityMap;"
                                  }
                            }
                        }
                    }
                }
            }
        }
    }
} 