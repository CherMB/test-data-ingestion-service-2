{
  "widget": {
    "id": "e4",
    "title": "Commit Trends",
    "descripition": "Track commit activity over time, including commits per active developer (commits/dev)",
    "enable_components_compare": true,
    "components_compare_id": "commit-trends-compare",
    "content": [
      {
        "header": [
          {
            "title": "Total commits",
            "post_process_function_name": "commit trends",
            "spec_key": "totalCommitsHeaderSpec",
            "drill_down": {
              "report_id": "commits",
              "report_title": "Commits"
            }
          },
          {
            "type": "subHeader",
            "post_process_function_name": "commit trends",
            "spec_key": "averageCommitsHeaderSpec"
          }
        ],
        "section": [
          {
            "type": 12,
            "show_legends": true,
            "color_scheme": [
              {
                "color0": "#63A3E1",
                "color1": "#0068CE",
                "color2": "#00AEEF"
              },
              {
                "color0": "#E499FF",
                "color1": "#A90BD2",
                "color2": "#DA72FF"
              }
            ],
            "light_color_scheme": [
              {
                "color0": "#63A3E1",
                "color1": "#0068CE",
                "color2": "#0057B2"
              },
              {
                "color0": "#E499FF",
                "color1": "#A90BD2",
                "color2": "#9C27B0"
              }
            ],
            "post_process_function_name": "commit trends",
            "spec_key": "commitsAndAverageChartSpec",
            "enable_post_transformation_processing": true,
            "drill_down": {
              "report_id": "commits",
              "report_title": "Commits"
            }
          }
        ]
      }
    ]
  },
  "queries": {
    "totalCommitsHeader": {
      "alias": "commit_data",
      "query": {
        "size": 0,
        "query": {
          "bool": {
            "filter": [
              {
                "range": {
                  "commit_timestamp": {
                    "gte": "{{.startDate}}",
                    "lte": "{{.endDate}}",
                    "format": "yyyy-MM-dd HH:mm:ss",
                    "time_zone": "{{.timeZone}}"
                  }
                }
              },
              {
                "term": {
                  "org_id": "{{.orgId}}"
                }
              },
              {
                "bool": {
                  "must_not": {
                    "term": {
                      "author": "github-actions[bot]"
                    }
                  }
                }
              },
              {
                "bool": {
                  "must_not": {
                    "prefix": {
                      "branch": {
                        "value": "dependabot"
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "aggs": {
          "commits_trends_widget": {
            "date_range": {
              "field": "commit_timestamp",
              "format": "yyyy-MM-dd HH:mm:ss",
              "time_zone": "{{.timeZone}}",
              "ranges": [
                {
                  "from": "{{.startDate}}",
                  "to": "{{.endDate}}"
                }
              ]
            },
            "aggs": {
              "commits_trend_headers": {
                "scripted_metric": {
                  "params": {
                    "timeZone": "{{.timeZone}}"
                  },
                  "init_script": "state.map = new HashMap(); def commitsSet = new HashSet(); def authorsSet = new HashSet(); state.map.put('commits',commitsSet); state.map.put('authors',authorsSet);",
                  "map_script": "def map = state.map; def uniqueCommit = doc.repository_name.value + '_' + doc.commit_id.value + '_' + doc.branch.value;map.get('commits').add(uniqueCommit);map.get('authors').add(doc.author.value);",
                  "combine_script": "return state.map;",
                  "reduce_script": "def commitsResult = new HashSet(); def authorsResult = new HashSet();for (state in states){if (state != null){def commits = state.get('commits');def authors = state.get('authors');if(commits!= null && authors!= null){for (c in commits){commitsResult.add(c);}for (a in authors){authorsResult.add(a);}}}}def resultMap = new HashMap();def cSize = commitsResult.size();def aSize = authorsResult.size();resultMap.put('commits_count', cSize);resultMap.put('unique_authors', aSize);resultMap.put('commits-per-author', (float) cSize/aSize);return resultMap;"
                }
              }
            }
          }
        }
      }
    },
    "commitsAndAverageChart": {
      "alias": "commit_data",
      "query": {
        "_source": false,
        "size": 0,
        "query": {
          "bool": {
            "filter": [
              {
                "range": {
                  "commit_timestamp": {
                    "gte": "{{.startDate}}",
                    "lte": "{{.endDate}}",
                    "format": "yyyy-MM-dd HH:mm:ss",
                    "time_zone": "{{.timeZone}}"
                  }
                }
              },
              {
                "term": {
                  "org_id": "{{.orgId}}"
                }
              },
              {
                "bool": {
                  "must_not": {
                    "term": {
                      "author": "github-actions[bot]"
                    }
                  }
                }
              },
              {
                "bool": {
                  "must_not": {
                    "prefix": {
                      "branch": {
                        "value": "dependabot"
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "aggs": {
          "commits_trends_widget": {
            "date_histogram": {
              "field": "commit_timestamp",
              "calendar_interval": "{{.aggrBy}}",
              "min_doc_count": 0,
              "format": "yyyy-MM-dd",
              "time_zone": "{{.timeZone}}",
              "extended_bounds": {
                "min": "{{.dateHistogramMin}}",
                "max": "{{.dateHistogramMax}}"
              }
            },
            "aggs": {
              "unique_authors": {
                "cardinality": {
                  "field": "author"
                }
              },
              "commits_count": {
                "cardinality": {
                  "field": "commit_id"
                }
              },
              "commits-per-auth": {
                "bucket_script": {
                  "buckets_path": {
                    "uniqueauth": "unique_authors",
                    "totalCommits": "commits_count"
                  },
                  "script": "params.totalCommits / params.uniqueauth"
                }
              }
            }
          }
        }
      }
    }
  }
}